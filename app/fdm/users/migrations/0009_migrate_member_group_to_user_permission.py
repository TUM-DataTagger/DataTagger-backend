# Generated by Django 4.2.14 on 2024-07-30 13:28

from django.db import migrations


def update_users_and_delete_group(apps, schema_editor):
    Group = apps.get_model("users", "Group")
    try:
        tum_group = Group.objects.get(name="TUM Members")
        for user in tum_group.user_set.all():
            user.can_create_projects = True
            user.save()
    except Group.DoesNotExist:
        pass


def reverse_update_users_and_create_group(apps, schema_editor):
    Group = apps.get_model("users", "Group")
    User = apps.get_model("users", "User")

    tum_group, created = Group.objects.get_or_create(name="TUM Members")
    for user in User.objects.filter(can_create_projects=True):
        user.can_create_projects = False
        user.save()
        tum_group.user_set.add(user)


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_add_group_tum_members"),
        ("users", "0008_user_can_create_projects_user_edu_person_affiliation_and_more"),
    ]

    operations = [
        migrations.RunPython(
            update_users_and_delete_group,
            reverse_code=reverse_update_users_and_create_group,
        ),
    ]
